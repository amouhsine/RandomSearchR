build-last-errors="[]"
build-last-errors-base-dir="~/Desktop/kaggle_gpu/add_GITHUB/RandomSearchR/"
build-last-outputs="[{\"output\":\"==> devtools::document(roclets=c('rd', 'collate', 'namespace'))\\n\\n\",\"type\":0},{\"output\":\"Updating RandomSearchR documentation\\nLoading RandomSearchR\\n\",\"type\":2},{\"output\":\"Updating roxygen version in  /home/lampros/Desktop/kaggle_gpu/add_GITHUB/RandomSearchR/DESCRIPTION \\n\",\"type\":1},{\"output\":\"First time using roxygen2. Upgrading automatically...\\n\",\"type\":2},{\"output\":\"Writing random_search_resample.Rd\\nWriting model_selection.Rd\\nWriting second_preds.Rd\\nWriting performance_measures.Rd\\nWriting subset_mods.Rd\\nWriting func_shuffle.Rd\\nWriting class_folds.Rd\\nWriting regr_folds.Rd\\nWriting acc.Rd\\nWriting function_grid.Rd\\nWriting func_weka_rerun.Rd\\nWriting optimal_grid.Rd\\nWriting length_grid.Rd\\nWriting predict.gbm.Rd\\nWriting predict_gbm_workaround_probs.Rd\\nWriting EXCEPTIONS_preds.Rd\\nWriting resampling_methods.Rd\\nWriting NAMESPACE\\n\",\"type\":1},{\"output\":\"Documentation completed\\n\\n\",\"type\":1},{\"output\":\"==> R CMD INSTALL --no-multiarch --with-keep.source RandomSearchR\\n\\n\",\"type\":0},{\"output\":\"* installing to library ‘/home/lampros/R/x86_64-pc-linux-gnu-library/3.2’\\n\",\"type\":1},{\"output\":\"* installing *source* package ‘RandomSearchR’ ...\\n\",\"type\":1},{\"output\":\"** R\\n\",\"type\":1},{\"output\":\"** preparing package for lazy loading\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** help\\n\",\"type\":1},{\"output\":\"*** installing help indices\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** building package indices\\n\",\"type\":1},{\"output\":\"** testing if installed package can be loaded\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"* DONE (RandomSearchR)\\n\",\"type\":1},{\"output\":\"\",\"type\":1}]"
compile_pdf_state="{\"errors\":[],\"output\":\"\",\"running\":false,\"tab_visible\":false,\"target_file\":\"\"}"
console_procs="[]"
files.monitored-path=""
find-in-files-state="{\"handle\":\"\",\"input\":\"\",\"path\":\"\",\"regex\":true,\"results\":{\"file\":[],\"line\":[],\"lineValue\":[],\"matchOff\":[],\"matchOn\":[]},\"running\":false}"
imageDirtyState="1"
saveActionState="-1"
